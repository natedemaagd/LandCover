% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gls_spatial_predict.R
\name{gls_spatial_predict}
\alias{gls_spatial_predict}
\title{Predict values from \code{gls_spatial()} output}
\usage{
gls_spatial_predict(data, reg_results, landcover)
}
\arguments{
\item{data}{\code{data.frame} with spatial data}

\item{reg_results}{object of class \code{gls} from the \code{gls_spatial} function}

\item{lc}{value of landcover for which the new dependent variable values are to be predicted}
}
\value{
A vector with predicted values of the dependent variable from gls_spatial()
}
\description{
After creating \code{gls} object(s) with the \code{gls_spatial()} function, this will create predicted values of the dependent variable from your regression, for the specified landcovers. Particularly useful once your landcover files have changed and you want to predict what effect this may have on the dependent variable.
}
\details{
This GLS predict function relies on a model created with the gls_spatial() function. It will not work if it is run independently (or before) the gls_spatial() function has been used to create the \code{reg_results} parameter.
}
\examples{
# create data.frame with x,y coordinates, landcover variable, and two covariates
dat <- data.frame(x = rnorm(100), y = rnorm(100), lc = rep(c('a','b'), each = 5), var1 = rnorm(100), var2 = rnorm(100))

# add a dependent variable to `dat`
dat$var3 <- with(dat, var1 + 2*var2 + rnorm(100))

# run the gls model
gls_results <- gls_spatial(data = dat, landcover_varname = 'lc', landcover_vec = c('a', 'b'), reg_formula = var3 ~ var1 + var2, error_formula = ~x+y)

# add predicted values of var3 to the data.frame
dat$var3_predict <- gls_spatial_predict(data = dat, reg_results = gls_results, landcover = unique(dat$lc))

}
