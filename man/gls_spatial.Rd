% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gls_spatial.R
\name{gls_spatial}
\alias{gls_spatial}
\title{Run spatial GLS models with optimal spatial correlation structure.}
\usage{
gls_spatial(
  data,
  landcover_varname,
  landcover_vec,
  reg_formula,
  error_formula,
  num_cores = parallel::detectCores() - 1,
  maxIter = 50,
  msMaxIter = 50,
  tolerance = 1e-06,
  silent = FALSE
)
}
\arguments{
\item{data}{\code{data.frame} with spatial data}

\item{landcover_varname}{character string specifying the landcover variable from \code{data}}

\item{landcover_vec}{vector of all landcover types in \code{data$landcover_varname} to be analyzed}

\item{reg_formula}{regression formula to be used, as in \code{lm()}, with columns from \code{data} (e.g. \code{c ~ a + b})}

\item{error_formula}{one-sided formula specifying coordinate columns from \code{data} (e.g. \code{~ x + y})}

\item{num_cores}{numerical. Number of cores for parallel processing, max 5}

\item{maxIter}{numerical. Max iterations for GLS optimization, see \code{?nlme::glsControl()}}

\item{msMaxIter}{numerical. Max iterations for optimization step inside GLS optimization, see \code{?nlme::glsControl()}}

\item{tolerance}{numerical. Tolerance for the convergence criterion, see \code{?nlme::glsControl()}}

\item{silent}{logical. Hides notifications for completion of each landcover type. Default is \code{FALSE}}
}
\value{
A list whose elements are the optimal GLS model. See details.
}
\description{
This function runs a GLS model on a spatial dataset. It chooses among five types of correlation structure, and returns the model with the lowest AIC.
}
\details{
Landcovers with large numbers of observations will take a long time to run. It is strongly recommended to use 5 cores in parallel. The code runs the landcover types sequentially, and the spatial GLS models for each landcover in parallel. The function will output the landcover and time of completion as it progresses, unless \code{silent = TRUE}. If there are too many observations for your system, you must take a representative subset. Each list element in the output corresponds to a landcover type. The objects are of class \code{gls} and will report the correlation structure that resulted in the lowest model AIC. If an element in the output list is \code{NA}, the log likelihood model failed to converge using all correlation structures. Try increasing the number of iterations or increasing the tolerance.
}
\examples{
# load packages
library(LandCover); library(foreach)

# initialize data.frame with coordinates
dat <- expand.grid(x = 1:20, y = 1:20, KEEP.OUT.ATTRS = FALSE)

# create some data: elevation, landcover, and temp/ET dependent on elevation and landcover
dat$elevation <- with(dat, 50 + 2*x + 5*y + rnorm(nrow(dat), sd = 7))
dat$landcover <- ifelse(dat$elevation < median(dat$elevation), 1, 2)
dat$temp      <- with(dat, (120-0.7*(0.5*elevation + 0.3*y - 0.5*x + ifelse(landcover == 'lc1', -30, 0) + rnorm(nrow(dat)))))
dat$ET        <- with(dat, (   -0.4*(-2*temp       + 0.5*y - 1.0*x + ifelse(landcover == 'lc1', +20, 0) + rnorm(nrow(dat)))))

# run the gls model
regression_results <- gls_spatial(data = dat, landcover_varname = 'landcover', landcover_vec = c(1,2),
                                  reg_formula = ET ~ elevation + temp, error_formula = ~ x + y)

}
